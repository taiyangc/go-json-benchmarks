// Code generated by protoc-gen-go.
// source: Pb.proto
// DO NOT EDIT!

/*
Package go_benchmark is a generated protocol buffer package.

It is generated from these files:
	Pb.proto

It has these top-level messages:
	PbTestObject
	With2Fields
*/
package go_benchmark

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PbTestObject struct {
	Field1  string `protobuf:"bytes,1,opt,name=field1" json:"field1,omitempty"`
	Field2  string `protobuf:"bytes,2,opt,name=field2" json:"field2,omitempty"`
	Field3  string `protobuf:"bytes,3,opt,name=field3" json:"field3,omitempty"`
	Field4  string `protobuf:"bytes,4,opt,name=field4" json:"field4,omitempty"`
	Field5  string `protobuf:"bytes,5,opt,name=field5" json:"field5,omitempty"`
	Field6  string `protobuf:"bytes,6,opt,name=field6" json:"field6,omitempty"`
	Field7  string `protobuf:"bytes,7,opt,name=field7" json:"field7,omitempty"`
	Field8  string `protobuf:"bytes,8,opt,name=field8" json:"field8,omitempty"`
	Field9  string `protobuf:"bytes,9,opt,name=field9" json:"field9,omitempty"`
	Field10 string `protobuf:"bytes,10,opt,name=field10" json:"field10,omitempty"`
}

func (m *PbTestObject) Reset()                    { *m = PbTestObject{} }
func (m *PbTestObject) String() string            { return proto.CompactTextString(m) }
func (*PbTestObject) ProtoMessage()               {}
func (*PbTestObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PbTestObject) GetField1() string {
	if m != nil {
		return m.Field1
	}
	return ""
}

func (m *PbTestObject) GetField2() string {
	if m != nil {
		return m.Field2
	}
	return ""
}

func (m *PbTestObject) GetField3() string {
	if m != nil {
		return m.Field3
	}
	return ""
}

func (m *PbTestObject) GetField4() string {
	if m != nil {
		return m.Field4
	}
	return ""
}

func (m *PbTestObject) GetField5() string {
	if m != nil {
		return m.Field5
	}
	return ""
}

func (m *PbTestObject) GetField6() string {
	if m != nil {
		return m.Field6
	}
	return ""
}

func (m *PbTestObject) GetField7() string {
	if m != nil {
		return m.Field7
	}
	return ""
}

func (m *PbTestObject) GetField8() string {
	if m != nil {
		return m.Field8
	}
	return ""
}

func (m *PbTestObject) GetField9() string {
	if m != nil {
		return m.Field9
	}
	return ""
}

func (m *PbTestObject) GetField10() string {
	if m != nil {
		return m.Field10
	}
	return ""
}

type With2Fields struct {
	Field1 string `protobuf:"bytes,1,opt,name=field1" json:"field1,omitempty"`
	Field2 string `protobuf:"bytes,2,opt,name=field2" json:"field2,omitempty"`
}

func (m *With2Fields) Reset()                    { *m = With2Fields{} }
func (m *With2Fields) String() string            { return proto.CompactTextString(m) }
func (*With2Fields) ProtoMessage()               {}
func (*With2Fields) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *With2Fields) GetField1() string {
	if m != nil {
		return m.Field1
	}
	return ""
}

func (m *With2Fields) GetField2() string {
	if m != nil {
		return m.Field2
	}
	return ""
}

func init() {
	proto.RegisterType((*PbTestObject)(nil), "go_benchmark.PbTestObject")
	proto.RegisterType((*With2Fields)(nil), "go_benchmark.With2Fields")
}

func init() { proto.RegisterFile("Pb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x08, 0x48, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0xcf, 0x8f, 0x4f, 0x4a, 0xcd, 0x4b, 0xce, 0xc8, 0x4d,
	0x2c, 0xca, 0x56, 0x6a, 0x60, 0xe2, 0xe2, 0x09, 0x48, 0x0a, 0x49, 0x2d, 0x2e, 0xf1, 0x4f, 0xca,
	0x4a, 0x4d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x4b, 0xcb, 0x4c, 0xcd, 0x49, 0x31, 0x94, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0xe0, 0xe2, 0x46, 0x12, 0x4c, 0x48, 0xe2, 0x46, 0x70, 0x71,
	0x63, 0x09, 0x66, 0x24, 0x71, 0x63, 0xb8, 0xb8, 0x89, 0x04, 0x0b, 0x92, 0xb8, 0x09, 0x5c, 0xdc,
	0x54, 0x82, 0x15, 0x49, 0xdc, 0x14, 0x2e, 0x6e, 0x26, 0xc1, 0x86, 0x24, 0x6e, 0x06, 0x17, 0x37,
	0x97, 0x60, 0x47, 0x12, 0x37, 0x87, 0x8b, 0x5b, 0x48, 0x70, 0x20, 0x89, 0x5b, 0xc0, 0xc5, 0x2d,
	0x25, 0x38, 0x91, 0xc4, 0x2d, 0x85, 0x24, 0xb8, 0xd8, 0x21, 0x3e, 0x31, 0x90, 0xe0, 0x02, 0x4b,
	0xc0, 0xb8, 0x4a, 0xb6, 0x5c, 0xdc, 0xe1, 0x99, 0x25, 0x19, 0x46, 0x6e, 0x20, 0x7e, 0x31, 0xa9,
	0x01, 0xe0, 0xc4, 0xe4, 0xc1, 0x98, 0xc4, 0x06, 0x0e, 0x5a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xbc, 0x50, 0x12, 0x4d, 0x66, 0x01, 0x00, 0x00,
}
